name: Boris

on:
  push:
    paths:
      - '**.ipynb'
      - 'MLFlow/**/*.pkl'

env:
  PYTHON_VERSION: 3.8

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      files-changed: ${{ steps.git-check.outputs.files-changed }}
    
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache Python dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('.github/workflows/code_review.yml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install nbqa isort pyupgrade ruff black pickle5

      - name: Set variable with git command output
        id: files-to-process
        run: |
          echo "NOTEBOOKS=$(git diff-tree --no-commit-id --name-status -r HEAD | grep -E '^[AM]\s' | cut -f2- | grep .ipynb | tr '\n' ' ')" >> $GITHUB_ENV
          echo "PICKLES=$(git diff-tree --no-commit-id --name-status -r HEAD | grep -E '^[AM]\s' | cut -f2- | grep .pkl | tr '\n' ' ')" >> $GITHUB_ENV

      - name: Format and lint notebooks
        if: env.NOTEBOOKS
        run: |
          nbqa isort $NOTEBOOKS
          nbqa pyupgrade $NOTEBOOKS --py36-plus
          nbqa black $NOTEBOOKS --line-length 120
          nbqa ruff $NOTEBOOKS --ignore=E203,E266,E402,E501

      - name: Validate pickle files
        if: env.PICKLES
        run: |
          set -e
          for file in $PICKLES; do
            echo "Validating $file..."
            python validate_pickle.py $file
          done

      - name: Set Git identity
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Check for modified files
        id: git-check
        run: git diff --exit-code || echo "::set-output name=files-changed::yes"

      - name: Commit and push changes (if any)
        if: steps.git-check.outputs.files-changed == 'yes'
        run: |
          git add -A
          git commit -m "Automatically formatted and validated by Boris"
          git push
