name: Boris

on:
  push:
    paths:
      - '**/*.ipynb'
      - 'MLFlow/**/*.pkl'

jobs:
  boris-check:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Cache Python dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('.github/workflows/code_review.yml') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install nbqa isort pyupgrade ruff black
      - name: Set variable with git command output
        run: echo "MY_VARIABLE=$(git diff-tree --no-commit-id --name-status -r HEAD | grep -E '^[AM]\s' | cut -f2- | grep .ipynb | tr '\n' ' ')" >> $GITHUB_ENV
      - name: Use the variable
        run: echo $MY_VARIABLE
      - name: Run nbQA with isort
        run: |
          if [[ -n "$MY_VARIABLE" ]]; then
            nbqa isort $MY_VARIABLE
          fi
      - name: Run nbQA with pyupgrade
        run: |
          if [[ -n "$MY_VARIABLE" ]]; then
            nbqa pyupgrade $MY_VARIABLE
          fi
        continue-on-error: true
      - name: Run nbQA with black
        run: |
          if [[ -n "$MY_VARIABLE" ]]; then
            nbqa black $MY_VARIABLE --line-length 120
          fi
      - name: Run nbQA with ruff
        run: |
          if [[ -n "$MY_VARIABLE" ]]; then
            nbqa ruff $MY_VARIABLE --ignore=E203,E266,E402,E501
          fi
      - name: Check for modified files
        id: git-check
        run: git diff --exit-code || echo "files-changed=yes" >> $GITHUB_ENV
      - name: Set Git identity
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
      - name: Commit and push changes (if any)
        if: env.files-changed == 'yes'
        run: |
          current_branch=$(git rev-parse --abbrev-ref HEAD)
          git add -A
          git commit -m "Automatically formatted by Boris"
          git push origin $current_branch

  validate-pickle:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install Python dependencies for pickle validation
        run: |
          python -m pip install --upgrade pip
          pip install pickle5
      - name: Capture modified pickle files
        run: |
          echo "PICKLES=$(git diff --name-only HEAD~1 HEAD | grep 'MLFlow/.*\.pkl' | tr '\n' ' ')" >> $GITHUB_ENV
          echo "Pickle files to validate: $PICKLES"
      - name: Validate modified pickle files
        run: |
          if [ -n "$PICKLES" ]; then
            for file in $PICKLES; do
              echo "Validating $file"
              python MLFlow/validate_pickle.py $file
            done
          else
            echo "No pickle files to validate."
          fi
      - name: Set Git identity
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
      - name: Check for modified files
        run: git diff --exit-code || echo "files-changed=yes" >> $GITHUB_ENV
      - name: Commit and push changes (if any)
        if: env.files-changed == 'yes'
        run: |
          git add -A
          git commit -m "Pickle files validated by Boris"
          git push origin $(git rev-parse --abbrev-ref HEAD)
